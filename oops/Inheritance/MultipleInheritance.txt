
Multiple Inheritance in Python
Earlier we saw that Inheritance allows us to define a base class which has commonly used method/variables. We then inherit from this class and create child classes.

Additionally, Python allows us an important feature: we can inherit from more than 1 base class. Let's understand the need for this first:

As per previous examples, we already have a Player class and an Elf class that is child of Player class
We wish to introduce another 2 characters: Police and ElfPolice. One of them is a human police, and the other will be an elf police
The structure looks like this:


To achieve, the above in Python, we need to do the following:

class Player:
    def __init__(self):
        self.lives = 5
        self.speed = 0
        self.stamina = 10
    def run(self):
        self.speed = self.speed + 5
 
 
class Elf(Player):
    def attack(self):
        print('Elf Attacking!')
 
class Police(Player):
    def arrest(self):
        print('Police Arresting!')
 
class ElfPolice(Elf,Police):
    def specialArrest(self):
        print('Special Arrest:')
        self.attack()
        self.arrest()
 
ep1 = ElfPolice()
ep1.specialArrest()
The syntax ElfPolice(Elf,Police) tells the class ElfPolice that it has to inherit both from Elf and Police
It gets methods from both the classes
Multiple inheritance brings one famous problem with it: The diamond problem.
